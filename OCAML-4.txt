(*Napisati funkciju koja prihvata tri broja. Funkcija vraća true ukoliko je jedan od njih bar tri puta veći od srednjeg po veličini.  Inače, funkcija vraća false. *)let f(a, b, c)  =   if a > b && a > c then     if b > c then b     else c  else if b > a && b > c then    if a > c then a    else c  else if c > a && c > b then    if a > b then a    else b   else a;;let triPutaVeci(a, b, c) =   let srednji = f(a,b,c) in  if srednji * 3 < a || srednji * 3 < b || srednji * 3 <  c  then true  else false ;;(* Napisati funkciju koja prihvata dva para cijelih brojeva. Ukoliko su parovi jednaki, funkcija vraća -1. Ukoliko je suma elemenata prvog para veća od sume elemenata drugog para, funkcija vraća 1. Ukoliko je suma elemenata prvog para manja od sume elemenata drugog para, funkcija vraća 2. Ukoliko su sume jednake, funkcija vraća 0. *) let parCijelih ((x, y) , (p, r)) =   let suma1 = x + y in  let suma2 = p + r in   if ( x = p && y = r) then -1   else if (suma1 > suma2) then 1   else if (suma1 < suma2) then 2  else 0;;(* Napisati funkciju koja računa sumu parnih elemenata liste (ne gledaju se parne pozicije, gleda se parnost elemenata). *)let rec sumaParnih lista =   if lista = [] then 0  else     let element = List.hd lista in     if element mod 2 = 0 then      List.hd lista + sumaParnih(List.tl lista)    else      sumaParnih(List.tl lista);;(* Funkcija prihvata dvije liste. Vraća true ukoliko je broj prostih elemenata neke liste tačno dva puta veći od broja elemenata druge liste. *)let rec prost (x, i) =   if x = 1 || x = 2 then false   else if x mod i = 0 then false  else if i * i > x then true   else prost(x, i+1) ;;let rec brojacProstih x  =   if x = [] then 0  else     let prosti = prost(List.hd x, 2) in    if (prosti) then 1 + brojacProstih(List.tl x)    else brojacProstih(List.tl x)   let porediListe x y =   if (brojacProstih x ) * 2 = List.length y then true  else if (brojacProstih y ) * 2 = List.length x then true  else     false ;;     (* Napisati funkciju koja prihvata dva vremenska trenutka h,m,s, te ispisuje koliko h,m,s proteklo između njih. *)let toHours sec =   sec / 3600  let toMinutes sec =  (sec mod 3600) / 60  let toSeconds sec  =  (sec mod 3600) mod 60      let vremenskiInterval (h1, m1, s1)(h2, m2, s2) =   let sekunde1 = h1 * 3600 + m1 * 60 + s1 in   let sekunde2 = h2 * 3600 + m2 * 60 + s2 in  if sekunde1 > sekunde2 then    let sekunde = sekunde1 - sekunde2 in    (toHours sekunde, toMinutes sekunde, toSeconds sekunde )  else let sekunde = sekunde2 - sekunde1 in    (toHours sekunde, toMinutes sekunde, toSeconds sekunde );;vremenskiInterval(13,13,01)(13,14,01);;    